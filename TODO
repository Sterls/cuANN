
TODO:
        1. calculate delta layer for output

        2. calculate delta lalyer for hidden layers

        3. calculate gradient descents for each weight

        4. update weights at every epoch (or at every input pattern)
        
NOTES:

        I might be able to do propagation, in a single kernel
        either by using a for-loop for each layer (and global weight array)
        or perhaps by using a 3D grid, where the z coordinate represents the layer.

        I should also be able to do delta error calculations
        using a shared array.
        This would hold the sum of w[ik] * d[k] for each neuron.
